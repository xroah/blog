import express from "express";
import path from "path";
import createProxy from "./proxy";
import React from "react";
import {JssProvider, SheetsRegistry, createGenerateId} from "react-jss";
import {renderToString} from "react-dom/server";
import {StaticRouter} from "react-router-dom";
import {createStore} from "redux";
import {Provider} from "react-redux";
import {ChunkExtractor} from "@loadable/server"
import App from "../src/components/app";
import reducers from "../src/reducers";

const app = express();
const context = path.resolve(__dirname, "../dist");
// This is the stats file generated by webpack loadable plugin
const statsFile = path.resolve(context, "loadable-stats.json");
const extractor = new ChunkExtractor({statsFile});

createProxy(app);
app.use(express.static(context, {index: false}));

app.use((req, res) => {
    const sheets = new SheetsRegistry();
    const generateId = createGenerateId();
    const ctx: any = {};
    const store = createStore(reducers);
    const compString = renderToString(
        extractor.collectChunks(
            <StaticRouter location={req.url} context={ctx}>
                <JssProvider registry={sheets} generateId={generateId}>
                    <Provider store={store}>
                        <App />
                    </Provider>
                </JssProvider>
            </StaticRouter>
        )
    );
    const content = `
        <!DOCTYPE html>
        <html lang="en">

        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Blog</title>
            <link rel="icon" href="/logo.png?9dacdd8b6a6d1ff120cc">
            <style id="serverRenderedStyle">
                ${sheets.toString()}
            </style>
            ${extractor.getLinkTags()}
            ${extractor.getStyleTags()}
        </head>

        <body>
            <div id="root">
                ${compString}
            </div>
            <script type="application/json" id="reduxInitialState">
                ${JSON.stringify(store.getState())}
            </script>
            <script crossorigin src="https://unpkg.com/react@16/umd/react.production.min.js"></script>
            <script crossorigin src="https://unpkg.com/react-dom@16/umd/react-dom.production.min.js"></script>
            <script crossorigin="" src="https://unpkg.com/react-router-dom@5.2.0/umd/react-router-dom.min.js"></script>
            ${extractor.getScriptTags()}
        </body>

        </html>
    `;

    // context.url will contain the URL to redirect to if a <Redirect> was used
    if (ctx.url) {
        return res.redirect(302, "/404");
    }

    res.send(content);
});

app.listen(8888);